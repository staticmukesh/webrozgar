@model WebRozgar.ViewModels.SeekerProfileViewModel
@{
    ViewBag.Title = "Account Settings";
}

<hgroup class="title">
    <p style="font-size: 30px; color: #36a0d6; margin-top: 30px;">@ViewBag.Title</p>
</hgroup>

<div class="row-fluid" style="margin-top: 40px;">
    <div class="tabbable">
        <ul class="nav nav-tabs">
            <li class="active">@Html.ActionLink("Update Profile", "Manage", "Account")</li>
            <li>@Html.ActionLink("Change Password", "ChangePassword", "Account")</li>
            <li>@Html.ActionLink("Back To Profile", "Profile", "My")</li>
        </ul>
        <div class="tab-content" style="min-height: 250px;">
            <div class="tab-pane active" id="tab1">
                @if (ViewBag.Message != null)
                {
                    if (ViewBag.Message == "1")
                    {
                    <div class="alert alert-success">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <p>Profile updated successfully!!!!!! <strong>@Html.ActionLink("Check", "Profile", "My")</strong> ur profile</p>
                    </div>
                    }
                    else
                    {
                    <div class="alert alert-error">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <p>Error while updating profile</p>
                    </div>
                    }
                }
                @using (Html.BeginForm("Manage", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <fieldset class="form-horizontal">
                        <legend>Personal Info</legend>

                        <div class="control-group">
                            @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                            <div class="controls">
                                @Html.EditorFor(m => m.FirstName)
                                @Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                            <div class="controls">
                                @Html.EditorFor(m => m.LastName)
                                @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(m => m.Phone, new { @class = "control-label" })
                            <div class="controls">
                                @Html.EditorFor(m => m.Phone)
                                @Html.ValidationMessageFor(m => m.Phone, null, new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(m => m.Gender, new { @class = "control-label" })
                            <div class="controls">
                                @{
                    List<SelectListItem> item = new List<SelectListItem>();
                    item.Add(new SelectListItem { Text = "Male", Value = "male" });
                    item.Add(new SelectListItem { Text = "Female", Value = "female" });
                                }
                                @Html.DropDownListFor(m => m.Gender, item, "Select", new { @class = "control-label", @id = "genders" })
                                @Html.ValidationMessageFor(m => m.Gender, null, new { @class = "help-inline" })
                            </div>
                        </div>

                        <legend>Educational Info</legend>

                        <div class="control-group">
                            @Html.LabelFor(m => m.Education, new { @class = "control-label" })
                            <div class="controls">
                                @{
                    List<SelectListItem> items = new List<SelectListItem>();
                    items.Add(new SelectListItem { Text = "Not Pursuing Graduation", Value = "1" });
                    items.Add(new SelectListItem { Text = "B.A", Value = "2" });
                    items.Add(new SelectListItem { Text = "B.Arch", Value = "3" });
                    items.Add(new SelectListItem { Text = "BCA", Value = "4" });
                    items.Add(new SelectListItem { Text = "B.B.A", Value = "5" });
                    items.Add(new SelectListItem { Text = "B.Com", Value = "6" });
                    items.Add(new SelectListItem { Text = "B.Ed", Value = "7" });
                    items.Add(new SelectListItem { Text = "BDS", Value = "8" });
                    items.Add(new SelectListItem { Text = "BHM", Value = "9" });
                    items.Add(new SelectListItem { Text = "B.Pharma", Value = "10" });
                    items.Add(new SelectListItem { Text = "B.Sc", Value = "11" });
                    items.Add(new SelectListItem { Text = "B.Tech/B.E.", Value = "12" });
                    items.Add(new SelectListItem { Text = "LLB", Value = "13" });
                    items.Add(new SelectListItem { Text = "MBBS", Value = "14" });
                    items.Add(new SelectListItem { Text = "Diploma", Value = "15" });
                    items.Add(new SelectListItem { Text = "BVSC", Value = "16" });
                    items.Add(new SelectListItem { Text = "Others", Value = "999" });
                                }
                                @Html.DropDownListFor(m => m.Education, items, "Select", new { @class = "control-label" })
                                @Html.ValidationMessageFor(m => m.Education, null, new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(m => m.University, new { @class = "control-label" })
                            <div class="controls">
                                @Html.TextBoxFor(m => m.University)
                                @Html.ValidationMessageFor(m => m.University, null, new { @class = "help-inline" })
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(m => m.WorkExperience, new { @class = "control-label" })
                            <div class="controls">
                                @{
                    List<SelectListItem> expitems = new List<SelectListItem>();
                    expitems.Add(new SelectListItem { Text = "Fresher", Value = "1" });
                    expitems.Add(new SelectListItem { Text = "0-6 months", Value = "2" });
                    expitems.Add(new SelectListItem { Text = "6-12 months", Value = "3" });
                    expitems.Add(new SelectListItem { Text = "1-3 years", Value = "4" });
                    expitems.Add(new SelectListItem { Text = "3-7 years", Value = "5" });
                    expitems.Add(new SelectListItem { Text = ">7 years", Value = "6" });
                                }
                                @Html.DropDownListFor(m => m.WorkExperience, expitems, "Select", new { @class = "control-label" })
                                @Html.ValidationMessageFor(m => m.WorkExperience, null, new { @class = "help-inline" })
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(m => m.Bio, new { @class = "control-label" })
                            <div class="controls">
                                @Html.TextAreaFor(m => m.Bio, new { @style = "height:100px;width:50%;", @placeholder = "Please describe about yourself including skills, talents, hobbies, etc." })
                                @Html.ValidationMessageFor(m => m.Bio, null, new { @class = "help-inline" })
                            </div>
                        </div>

                        <div class="control-group">
                            @Html.LabelFor(m => m.Resume, new { @class = "control-label" })
                            <div class="controls">
                                <input type="file" name="Resume" />
                                @Html.ValidationMessageFor(m => m.Resume, null, new { @class = "help-inline" })
                                @if (Model.IsProfileCompleted == 1)
                                {   
                                    @Html.ActionLink("Download your resume", "Resume", new { @target = "_blank" })
                                }
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="controls">
                                <input type="submit" value="Update" class="btn btn-primary" />
                            </div>
                        </div>

                        @Html.ValidationSummary(true)
                    </fieldset> 
                }

            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
